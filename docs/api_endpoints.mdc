# T√†i li·ªáu API Endpoints: Social Blog Backend

T√†i li·ªáu n√†y l√† "ngu·ªìn ch√¢n l√Ω duy nh·∫•t" cho t·∫•t c·∫£ c√°c API endpoint m√† backend cung c·∫•p. Frontend s·∫Ω d·ª±a v√†o ƒë√¢y ƒë·ªÉ x√¢y d·ª±ng l·ªõp giao ti·∫øp d·ªØ li·ªáu.

---

## 1. Th√¥ng tin chung

* **Base URL:** `/api`
* **X√°c th·ª±c:** C√°c route ƒë∆∞·ª£c ƒë√°nh d·∫•u `Private` y√™u c·∫ßu m·ªôt `Authorization: Bearer <JWT_TOKEN>` header.
* **Ki·ªÉu d·ªØ li·ªáu:** H·∫ßu h·∫øt c√°c endpoint s·ª≠ d·ª•ng `application/json`, tr·ª´ endpoint t·∫°o b√†i vi·∫øt s·ª≠ d·ª•ng `multipart/form-data`.

---

## 2. Auth Endpoints üîê

**Prefix:** `/api/auth`

### `POST /register`
* **Access:** Public
* **Description:** ƒêƒÉng k√Ω t√†i kho·∫£n m·ªõi.
* **Request Body** (`application/json`):
    ```json
    {
      "username": "string",
      "email": "string",
      "password": "string"
    }
    ```
* **Success Response (201):**
    ```json
    {
        "_id": "68a2cdf0cbf55d2c1c4fe61e",
        "username": "testuser1",
        "email": "test1@example.com",
        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YTJjZGYwY2JmNTVkMmMxYzRmZTYxZSIsImlhdCI6MTc1NTUwMDAxNiwiZXhwIjoxNzU4MDkyMDE2fQ.qip_uRjP5rqtSqzXKSswkG-H_G-PJg1dPVdUgBtiuI4"
    }
    ```

### `POST /login`
* **Access:** Public
* **Description:** ƒêƒÉng nh·∫≠p v√† nh·∫≠n token.
* **Request Body** (`application/json`):
    ```json
    {
      "email": "string",
      "password": "string"
    }
    ```
* **Success Response (200):**
    ```json
    {
      "_id": "68a2cdf0cbf55d2c1c4fe61e",
      "username": "testuser1",
      "email": "test1@example.com",
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YTJjZGYwY2JmNTVkMmMxYzRmZTYxZSIsImlhdCI6MTc1NTUwMDAxNiwiZXhwIjoxNzU4MDkyMDE2fQ.qip_uRjP5rqtSqzXKSswkG-H_G-PJg1dPVdUgBtiuI4"
    }
    ```

---

## 3. Post Endpoints üìù

**Prefix:** `/api/posts`

### `POST /`
* **Access:** Private
* **Description:** T·∫°o m·ªôt b√†i vi·∫øt m·ªõi (c√≥ th·ªÉ k√®m ·∫£nh).
* **Request Body** (`multipart/form-data`):
    * `content`: "string"
    * `image`: file (optional)
* **Success Response (201):** Tr·∫£ v·ªÅ ƒë·ªëi t∆∞·ª£ng Post v·ª´a ƒë∆∞·ª£c t·∫°o.

### `GET /`
* **Access:** Private
* **Description:** L·∫•y t·∫•t c·∫£ b√†i vi·∫øt (d√†nh cho trang kh√°m ph√°). H·ªó tr·ª£ ph√¢n trang.
* **Query Params:** `?page=<number>&limit=<number>`
* **Success Response (200):**
    ```json
    {
      "posts": "[Array of Post objects]",
      "page": "number",
      "totalPages": "number",
      "totalPosts": "number"
    }
    ```

### `GET /feed`
* **Access:** Private
* **Description:** L·∫•y b√†i vi·∫øt t·ª´ nh·ªØng ng∆∞·ªùi d√πng ƒëang theo d√µi. H·ªó tr·ª£ ph√¢n trang.
* **Query Params:** `?page=<number>&limit=<number>`
* **Success Response (200):** C·∫•u tr√∫c t∆∞∆°ng t·ª± `GET /`.

### `GET /:id`
* **Access:** Private
* **Description:** L·∫•y chi ti·∫øt m·ªôt b√†i vi·∫øt.
* **URL Params:** `id` (Post ID)
* **Success Response (200):** Tr·∫£ v·ªÅ m·ªôt ƒë·ªëi t∆∞·ª£ng Post ƒë√£ ƒë∆∞·ª£c populate user v√† comments.

### `DELETE /:id`
* **Access:** Private
* **Description:** X√≥a m·ªôt b√†i vi·∫øt (ch·ªâ ch·ªß s·ªü h·ªØu).
* **URL Params:** `id` (Post ID)
* **Success Response (200):**
    ```json
    {
      "message": "Post deleted successfully"
    }
    ```

### `POST /:id/like`
* **Access:** Private
* **Description:** Th√≠ch ho·∫∑c b·ªè th√≠ch m·ªôt b√†i vi·∫øt.
* **URL Params:** `id` (Post ID)
* **Success Response (200):**
    ```json
    {
      "message": "Post unliked" //Post liked
    }
    ```

### `POST /:id/comments`
* **Access:** Private
* **Description:** Th√™m m·ªôt b√¨nh lu·∫≠n v√†o b√†i vi·∫øt.
* **URL Params:** `id` (Post ID)
* **Request Body** (`application/json`):
    ```json
    {
      "text": "string"
    }
    ```
* **Success Response (201):** Tr·∫£ v·ªÅ ƒë·ªëi t∆∞·ª£ng Comment v·ª´a ƒë∆∞·ª£c t·∫°o.

---

## 4. User Endpoints üßë‚Äçü§ù‚Äçüßë

**Prefix:** `/api/users`

### `POST /:id/follow`
* **Access:** Private
* **Description:** Theo d√µi m·ªôt ng∆∞·ªùi d√πng.
* **URL Params:** `id` (User ID to follow)
* **Success Response (200):**
    ```json
    {
      "message": "Followed user successfully"
    }
    ```

### `POST /:id/unfollow`
* **Access:** Private
* **Description:** B·ªè theo d√µi m·ªôt ng∆∞·ªùi d√πng.
* **URL Params:** `id` (User ID to unfollow)
* **Success Response (200):**
    ```json
    {
      "message": "Unfollowed user successfully"
    }
    ```